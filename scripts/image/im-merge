#!/usr/bin/env python3

from pathlib import Path
import argparse
import os
import numpy as np
from os.path import join
from random import shuffle
# from cv2 import cv2 as cv
import cv2 as cv
from torchvision.utils import make_grid
from torchvision.transforms import ToPILImage
from PIL import Image
from tqdm import tqdm
import torch
import matplotlib.pyplot as plt
from glob import glob


def parse():
    parser = argparse.ArgumentParser()
    parser.add_argument('targets', type=str, nargs='+')
    parser.add_argument('--direction', '-d', type=int, choices=[0, 1], default=0)
    return parser.parse_args()


def main(args):
    args = parse()

    # define output path
    targets = args.targets
    dir_out = '_'.join(targets)
    os.makedirs(dir_out, exist_ok=True)

    groups = [sorted(glob(join(target, '*.*'))) for target in targets]
    for group in tqdm(list(zip(*groups))):
        xs = [np.array(Image.open(path)) for path in group]
        x = np.concatenate(xs, axis=args.direction)
        img = Image.fromarray(x)
        names = [Path(path).stem for path in group]
        name = '_'.join(names)
        img.save(join(dir_out, f'{name}.png'))


if __name__ == '__main__':
    args = parse()
    main(args)
