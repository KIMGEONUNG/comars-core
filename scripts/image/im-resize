#!/usr/bin/env python

import sys
from PIL import Image


def parse():
    import argparse
    parser = argparse.ArgumentParser(description='Image resize')
    parser.add_argument('-r', '--replace', default=False,
                        action='store_true', help='replace input')
    parser.add_argument('--long', default=False,
                        action='store_true', help='based on long side')
    parser.add_argument('-s', '--size', type=int, default=512,
                        help='target image size')
    return parser.parse_args()


def main():
    args = parse()

    method = Image.BICUBIC
    target_files = sys.stdin.read().splitlines()
    print("image resize target files: %d EA" % len(target_files), file=sys.stderr)

    for target_file in target_files:
        im = Image.open(target_file)
        width, height = im.size
        len_min = min(width, height)
        len_max = max(width, height)
        if args.long:
            width = width / len_max * args.size
            height = height / len_max * args.size
        else:
            width = width / len_min * args.size
            height = height / len_min * args.size

        width = int(width)
        height = int(height)

        im = im.resize((width, height))

        path_output = None
        if args.replace:
            path_output = target_file
        else:
            parts = target_file.split('.')
            head = ''.join(parts[:-1])
            ext = parts[-1]
            path_output = head + '_resize_%04d.' % (args.size) + ext

        im.save(path_output)
        print(path_output)


if __name__ == '__main__':
    main()
