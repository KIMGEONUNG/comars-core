#!/usr/bin/env python3

import sys
from scipy.io import loadmat
import argparse
import matplotlib.pyplot as plt
import numpy as np 
import cv2


def parse():
    p = argparse.ArgumentParser()
    p.add_argument('--scale', type=float, default=1.0) 
    p.add_argument('--fps', type=int, default=10) 
    p.add_argument('--path_output', type=str, default='output.mp4') 

    return p.parse_args()

def get_img(path):
    img: np.ndarray = loadmat(path)['noisy_list']
    img = img.astype('float32') / (2 ** 16)
    img = img[..., :3][..., ::-1]

    return img


def scale_img(img, scale):
    img = img * scale
    img = img.clip(0, 1)
    return img

def main():
    args = parse()

    target_files = sys.stdin.read().splitlines()
    print("# Target files", file=sys.stderr)
    for i in target_files:
        print(i, file=sys.stderr)

    imgs = [scale_img(get_img(f), args.scale) for f in target_files]
    h, w, _ = imgs[0].shape

    out = cv2.VideoWriter(args.path_output,
            cv2.VideoWriter_fourcc(*'mp4v'),
            args.fps,
            (w, h),
            True)

    for img in imgs:
        img = (img * 255).astype('uint8')
        out.write(img)
    out.release()


if __name__ == '__main__':
    main()
