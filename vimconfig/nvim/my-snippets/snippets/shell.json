{
  "Error": {
    "prefix": [
      "error"
    ],
    "body": [
      "echo -e \"\\033[31mError: ${1:text} \\033[0m\" >&2"
    ],
    "description": [
      "error"
    ]
  },
  "name": {
    "prefix": [
      "cvd"
    ],
    "body": [
      "CUDA_VISIBLE_DEVICES=${1:0}"
    ],
    "description": [
      "cuda visible divices"
    ]
  },
  "condaact": {
    "prefix": [
      "condaact"
    ],
    "body": [
      "source ~/anaconda3/etc/profile.d/conda.sh",
      "conda activate ${1}"
    ],
    "description": [
      "conda activate for bash script"
    ]
  },
  "variable": {
    "prefix": [
      "v"
    ],
    "body": [
      "\\${${1:name}}"
    ],
    "description": [
      "variable"
    ]
  },
  "set": {
    "prefix": [
      "s"
    ],
    "body": [
      "set -e"
    ],
    "description": [
      "set -e"
    ]
  },
  "argsh": {
    "prefix": [
      "argh"
    ],
    "body": [
      "while [[ $# -gt 0 ]]",
      "do",
      "  key=\"\\${1}\"",
      "  case \\${key} in",
      "  -h|--help)",
      "    echo \"${1:Description}\"",
      "    shift # past argument",
      "    ;;",
      "  *)    # unknown option",
      "    shift # past argument",
      "    ;;",
      "  esac",
      "done"
    ],
    "description": [
      "Argument parser for help"
    ]
  },
  "args": {
    "prefix": [
      "arg"
    ],
    "body": [
      "while [[ $# -gt 0 ]]",
      "do",
      "  key=\"\\${1}\"",
      "",
      "  case \\${key} in",
      "  -p|--path)",
      "    path=\"\\${2}\"",
      "    shift 2",
      "    ;;",
      "  -h|--help)",
      "    echo \"${1:Description}\"",
      "    shift # past argument",
      "    ;;",
      "  *)    # unknown option",
      "    shift # past argument",
      "    ;;",
      "  esac",
      "done",
      "",
      "if [ -z \"\\$path\" ]; then",
      "  echo 'Missing -h or -u' >&2",
      "  exit 1",
      "fi",
      ""
    ],
    "description": [
      "Default argument parser"
    ]
  },
  "checkarg": {
    "prefix": [
      "cha"
    ],
    "body": [
      "if [ -z \"\\${${1:arg}\\}\" ]; then",
      "  echo 'Missing --${1}' >&2",
      "  exit 1",
      "fi",
      ""
    ],
    "description": [
      "Check a required argument"
    ]
  },
  "checkfile": {
    "prefix": [
      "chf"
    ],
    "body": [
      "if [ -f ${1:path} ]; then",
      "  echo 'No such a file ${1}' >&2",
      "  exit 1",
      "fi",
      ""
    ],
    "description": [
      "Check that the file exists"
    ]
  },
  "checknofile": {
    "prefix": [
      "chfn"
    ],
    "body": [
      "if ! [ -f ${1:path} ]; then",
      "  echo 'The file already exists ${1}' >&2",
      "  exit 1",
      "fi",
      ""
    ],
    "description": [
      "Check that the file does not exist"
    ]
  },
  "checkdir": {
    "prefix": [
      "chd"
    ],
    "body": [
      "if [ -d ${1:path} ]; then",
      "  echo 'No such a directory ${1}' >&2",
      "  exit 1",
      "fi",
      ""
    ],
    "description": [
      "Check that the directory exists"
    ]
  },
  "checknodir": {
    "prefix": [
      "chdn"
    ],
    "body": [
      "if ! [ -d ${1:path} ]; then",
      "  echo 'The directory already exists ${1}' >&2",
      "  exit 1",
      "fi",
      ""
    ],
    "description": [
      "Check that the directory does not exist"
    ]
  }
}
